{"version":3,"sources":["components/Cards/Cards.module.css","pages/Home.module.css","components/PickCountry/PickCountry.module.css","components/Cards/Card/Card.module.css","images/head.png","components/PickCountry/PickCountry.jsx","components/Cards/Card/Card.jsx","components/Cards/Cards.jsx","pages/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","PickCountry","props","useState","countries","setCountries","useEffect","axios","get","then","res","data","catch","err","console","log","FormControl","className","styles","formControl","NativeSelect","onChange","event","handleCountryChange","value","map","item","index","name","EachCard","Grid","xs","md","component","Card","cn","card","CardContent","Typography","color","variant","start","end","duration","separator","detail","Cards","confirmed","recovered","deaths","container","death","Home","state","country","target","getData","setCountry","history","push","search","setUrl","setState","this","lastUpdate","Date","toDateString","image","src","imgHeader","alt","gutterBottom","React","Component","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59b896bd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3mAoW\",\"confirmed\":\"Cards_confirmed__qbQCr\",\"recovered\":\"Cards_recovered__2JkHa\",\"death\":\"Cards_death__1mltY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"Home_image__2tHV2\",\"container\":\"Home_container__3SD21\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"PickCountry_formControl__1fCXZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1lHQA\"};","export default __webpack_public_path__ + \"static/media/head.37a64eb1.png\";","import React, { useState, useEffect } from \"react\";\r\nimport { FormControl, NativeSelect } from \"@material-ui/core\";\r\nimport styles from \"./PickCountry.module.css\";\r\nimport axios from \"axios\";\r\n\r\nconst PickCountry = (props) => {\r\n  const [countries, setCountries] = useState([]);\r\n  useEffect(() => {\r\n    getCountry();\r\n  }, []);\r\n\r\n  function getCountry() {\r\n    axios\r\n      .get(\"https://covid19.mathdro.id/api/countries\")\r\n      .then((res) => {\r\n        setCountries(res.data.countries);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect onChange={(event) => props.handleCountryChange(event)}>\r\n        <option value=\"\">Global</option>\r\n        {countries.map((item, index) => (\r\n          <option key={index} value={item.name}>\r\n            {item.name}\r\n          </option>\r\n        ))}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default PickCountry;\r\n","import React from \"react\";\r\nimport { Grid, Card, CardContent, Typography } from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\nimport cn from \"classnames\";\r\nimport styles from \"./Card.module.css\";\r\n\r\nconst EachCard = (props) => {\r\n  return (\r\n    <Grid\r\n      item\r\n      xs={12}\r\n      md={4}\r\n      component={Card}\r\n      className={cn(styles.card, props.className)}\r\n    >\r\n      <CardContent>\r\n        <Typography color=\"textSecondary\">{props.name}</Typography>\r\n        <Typography variant=\"h5\">\r\n          <CountUp\r\n            start={0}\r\n            end={props.value}\r\n            duration={3}\r\n            separator=\",\"\r\n          ></CountUp>\r\n        </Typography>\r\n        <Typography color=\"textSecondary\">People</Typography>\r\n        <Typography variant=\"body2\">{props.detail}</Typography>\r\n      </CardContent>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default EachCard;\r\n","import React from \"react\";\r\nimport styles from \"./Cards.module.css\";\r\nimport EachCard from \"./Card/Card\";\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths } }) => {\r\n  if (!confirmed) {\r\n    return \"Loading...\";\r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n      <EachCard\r\n        name=\"Confirmed\"\r\n        detail=\"have been confirmed\"\r\n        value={confirmed.value}\r\n        className={styles.confirmed}\r\n      />\r\n      <EachCard\r\n        name=\"Recovered\"\r\n        detail=\"have been recovered\"\r\n        value={recovered.value}\r\n        className={styles.recovered}\r\n      />\r\n      <EachCard\r\n        name=\"Deaths\"\r\n        detail=\"have died after being infected\"\r\n        value={deaths.value}\r\n        className={styles.death}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import React from \"react\";\r\nimport styles from \"./Home.module.css\";\r\nimport imgHeader from \"../images/head.png\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PickCountry from \"../components/PickCountry/PickCountry\";\r\nimport Cards from \"../components/Cards/Cards\";\r\nimport axios from \"axios\";\r\n\r\nclass Home extends React.Component {\r\n  state = {\r\n    name: \"Risky Amalia Haris\",\r\n    data: {},\r\n  };\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n\r\n  handleCountryChange = (event) => {\r\n    const country = event.target.value;\r\n    this.getData(country);\r\n    const setCountry = country ? country : \"Global\";\r\n    this.props.history.push({\r\n      search: \"?country=\" + setCountry,\r\n    });\r\n  };\r\n\r\n  getData = (country) => {\r\n    let setUrl = \"https://covid19.mathdro.id/api\";\r\n    setUrl = country ? `${setUrl}/countries/${country}` : setUrl;\r\n    axios\r\n      .get(setUrl)\r\n      .then((res) => {\r\n        this.setState({\r\n          data: res.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  render() {\r\n    const { data } = this.state;\r\n    const lastUpdate = new Date(data.lastUpdate).toDateString();\r\n    return (\r\n      <div className={styles.container}>\r\n        <img className={styles.image} src={imgHeader} alt=\"\" />\r\n        <Typography variant=\"subtitle2\" color=\"textSecondary\" gutterBottom>\r\n          Last Update : {lastUpdate}\r\n        </Typography>\r\n        <PickCountry handleCountryChange={this.handleCountryChange} />\r\n        <Cards data={data} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home.jsx\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}